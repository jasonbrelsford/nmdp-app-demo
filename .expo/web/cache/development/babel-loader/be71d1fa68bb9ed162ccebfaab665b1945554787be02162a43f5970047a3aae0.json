{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\nexport default function MatchProbabilityScreen() {\n  var _useState = useState(1),\n    _useState2 = _slicedToArray(_useState, 2),\n    matchPercentage = _useState2[0],\n    setMatchPercentage = _useState2[1];\n  var requestTypingKit = function requestTypingKit() {\n    Alert.alert('Success', 'Your free typing kit has been requested!');\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(Text, {\n      style: styles.percentage,\n      children: [matchPercentage, \"%\"]\n    }), _jsx(Text, {\n      style: styles.label,\n      children: \"Match Probability\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: requestTypingKit,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Improve Your Match Possibility\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff'\n  },\n  percentage: {\n    fontSize: 48,\n    fontWeight: 'bold',\n    color: '#4285F4'\n  },\n  label: {\n    fontSize: 18,\n    marginBottom: 30\n  },\n  button: {\n    backgroundColor: '#4285F4',\n    padding: 15,\n    borderRadius: 5,\n    width: '80%',\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","StyleSheet","jsxs","_jsxs","jsx","_jsx","MatchProbabilityScreen","_useState","_useState2","_slicedToArray","matchPercentage","setMatchPercentage","requestTypingKit","Alert","alert","style","styles","container","children","percentage","label","button","onPress","buttonText","create","flex","justifyContent","alignItems","backgroundColor","fontSize","fontWeight","color","marginBottom","padding","borderRadius","width"],"sources":["/home/project/src/screens/MatchProbabilityScreen.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\n\nexport default function MatchProbabilityScreen() {\n  const [matchPercentage, setMatchPercentage] = useState(1);\n\n  const requestTypingKit = () => {\n    // Implementation for requesting typing kit\n    Alert.alert('Success', 'Your free typing kit has been requested!');\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.percentage}>{matchPercentage}%</Text>\n      <Text style={styles.label}>Match Probability</Text>\n      \n      <TouchableOpacity style={styles.button} onPress={requestTypingKit}>\n        <Text style={styles.buttonText}>Improve Your Match Possibility</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n  },\n  percentage: {\n    fontSize: 48,\n    fontWeight: 'bold',\n    color: '#4285F4',\n  },\n  label: {\n    fontSize: 18,\n    marginBottom: 30,\n  },\n  button: {\n    backgroundColor: '#4285F4',\n    padding: 15,\n    borderRadius: 5,\n    width: '80%',\n    alignItems: 'center',\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n});"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,UAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA,EAAAC,GAAA,IAAAC,IAAA;AAGxC,eAAe,SAASC,sBAAsBA,CAAA,EAAG;EAC/C,IAAAC,SAAA,GAA8CV,QAAQ,CAAC,CAAC,CAAC;IAAAW,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAlDG,eAAe,GAAAF,UAAA;IAAEG,kBAAkB,GAAAH,UAAA;EAE1C,IAAMI,gBAAgB,GAAG,SAAnBA,gBAAgBA,CAAA,EAAS;IAE7BC,KAAK,CAACC,KAAK,CAAC,SAAS,EAAE,0CAA0C,CAAC;EACpE,CAAC;EAED,OACEX,KAAA,CAACL,IAAI;IAACiB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5Bf,KAAA,CAACJ,IAAI;MAACgB,KAAK,EAAEC,MAAM,CAACG,UAAW;MAAAD,QAAA,GAAER,eAAe,EAAC,GAAC;IAAA,CAAM,CAAC,EACzDL,IAAA,CAACN,IAAI;MAACgB,KAAK,EAAEC,MAAM,CAACI,KAAM;MAAAF,QAAA,EAAC;IAAiB,CAAM,CAAC,EAEnDb,IAAA,CAACL,gBAAgB;MAACe,KAAK,EAAEC,MAAM,CAACK,MAAO;MAACC,OAAO,EAAEV,gBAAiB;MAAAM,QAAA,EAChEb,IAAA,CAACN,IAAI;QAACgB,KAAK,EAAEC,MAAM,CAACO,UAAW;QAAAL,QAAA,EAAC;MAA8B,CAAM;IAAC,CACrD,CAAC;EAAA,CACf,CAAC;AAEX;AAEA,IAAMF,MAAM,GAAGf,UAAU,CAACuB,MAAM,CAAC;EAC/BP,SAAS,EAAE;IACTQ,IAAI,EAAE,CAAC;IACPC,cAAc,EAAE,QAAQ;IACxBC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE;EACnB,CAAC;EACDT,UAAU,EAAE;IACVU,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE;EACT,CAAC;EACDX,KAAK,EAAE;IACLS,QAAQ,EAAE,EAAE;IACZG,YAAY,EAAE;EAChB,CAAC;EACDX,MAAM,EAAE;IACNO,eAAe,EAAE,SAAS;IAC1BK,OAAO,EAAE,EAAE;IACXC,YAAY,EAAE,CAAC;IACfC,KAAK,EAAE,KAAK;IACZR,UAAU,EAAE;EACd,CAAC;EACDJ,UAAU,EAAE;IACVQ,KAAK,EAAE,MAAM;IACbF,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
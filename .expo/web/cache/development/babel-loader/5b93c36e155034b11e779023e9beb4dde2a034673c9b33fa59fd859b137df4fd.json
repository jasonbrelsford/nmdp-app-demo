{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as Location from 'expo-location';\nimport * as Google from 'expo-auth-session/providers/google';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    location = _useState2[0],\n    setLocation = _useState2[1];\n  var _Google$useAuthReques = Google.useAuthRequest({\n      clientId: 'YOUR_GOOGLE_CLIENT_ID'\n    }),\n    _Google$useAuthReques2 = _slicedToArray(_Google$useAuthReques, 3),\n    request = _Google$useAuthReques2[0],\n    response = _Google$useAuthReques2[1],\n    promptAsync = _Google$useAuthReques2[2];\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      var _yield$Location$reque = yield Location.requestForegroundPermissionsAsync(),\n        status = _yield$Location$reque.status;\n      if (status !== 'granted') {\n        Alert.alert('Permission Denied', 'Location permission is required for this app.');\n        return;\n      }\n    })();\n  }, []);\n  var handleLogin = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      try {\n        var result = yield promptAsync();\n        if (result.type === 'success') {\n          navigation.replace('Feed');\n        }\n      } catch (error) {\n        Alert.alert('Error', 'Failed to login');\n      }\n    });\n    return function handleLogin() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"NMDP Donor App\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.button,\n      onPress: handleLogin,\n      children: _jsx(Text, {\n        style: styles.buttonText,\n        children: \"Sign in with Google\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 30\n  },\n  button: {\n    backgroundColor: '#4285F4',\n    padding: 15,\n    borderRadius: 5,\n    width: '80%',\n    alignItems: 'center'\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","Text","TouchableOpacity","StyleSheet","Alert","Location","Google","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","location","setLocation","_Google$useAuthReques","useAuthRequest","clientId","_Google$useAuthReques2","request","response","promptAsync","_asyncToGenerator","_yield$Location$reque","requestForegroundPermissionsAsync","status","alert","handleLogin","_ref3","result","type","replace","error","apply","arguments","style","styles","container","children","title","button","onPress","buttonText","create","flex","justifyContent","alignItems","backgroundColor","fontSize","fontWeight","marginBottom","padding","borderRadius","width","color"],"sources":["/home/project/src/screens/LoginScreen.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, TouchableOpacity, StyleSheet, Alert } from 'react-native';\nimport * as Location from 'expo-location';\nimport * as Google from 'expo-auth-session/providers/google';\n\nexport default function LoginScreen({ navigation }) {\n  const [location, setLocation] = useState(null);\n\n  const [request, response, promptAsync] = Google.useAuthRequest({\n    clientId: 'YOUR_GOOGLE_CLIENT_ID',\n  });\n\n  useEffect(() => {\n    (async () => {\n      let { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        Alert.alert('Permission Denied', 'Location permission is required for this app.');\n        return;\n      }\n    })();\n  }, []);\n\n  const handleLogin = async () => {\n    try {\n      const result = await promptAsync();\n      if (result.type === 'success') {\n        navigation.replace('Feed');\n      }\n    } catch (error) {\n      Alert.alert('Error', 'Failed to login');\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>NMDP Donor App</Text>\n      <TouchableOpacity style={styles.button} onPress={handleLogin}>\n        <Text style={styles.buttonText}>Sign in with Google</Text>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 30,\n  },\n  button: {\n    backgroundColor: '#4285F4',\n    padding: 15,\n    borderRadius: 5,\n    width: '80%',\n    alignItems: 'center',\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 16,\n    fontWeight: 'bold',\n  },\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}